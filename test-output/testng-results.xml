<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="2" total="20" passed="15">
  <reporter-output>
  </reporter-output>
  <suite name="TestDependency" duration-ms="725" started-at="2015-05-11T17:29:57Z" finished-at="2015-05-11T17:29:58Z">
    <groups>
      <group name="testUser">
        <method signature="UserTest.f()[pri:0, instance:Test.UserTest@750d3126]" name="f" class="Test.UserTest"/>
        <method signature="UserTest.testGetUserEntity(java.lang.String, java.lang.String)[pri:0, instance:Test.UserTest@750d3126]" name="testGetUserEntity" class="Test.UserTest"/>
        <method signature="UserTest.testSaveUser(java.lang.Boolean, com.FCI.SWE.Models.UserEntity)[pri:0, instance:Test.UserTest@750d3126]" name="testSaveUser" class="Test.UserTest"/>
      </group> <!-- testUser -->
      <group name="Entity">
        <method signature="NewTest.f2()[pri:0, instance:Test.NewTest@439cf2df]" name="f2" class="Test.NewTest"/>
        <method signature="NewTest.testSingleMessage()[pri:0, instance:Test.NewTest@439cf2df]" name="testSingleMessage" class="Test.NewTest"/>
        <method signature="PostTest.testSavePost(java.lang.Boolean, com.FCI.SWE.Models.Post)[pri:0, instance:Test.PostTest@12b7530]" name="testSavePost" class="Test.PostTest"/>
        <method signature="PostTest.testgetPost2()[pri:0, instance:Test.PostTest@12b7530]" name="testgetPost2" class="Test.PostTest"/>
        <method signature="PostTest.testgetStat()[pri:0, instance:Test.PostTest@12b7530]" name="testgetStat" class="Test.PostTest"/>
        <method signature="UserTest.f()[pri:0, instance:Test.UserTest@750d3126]" name="f" class="Test.UserTest"/>
        <method signature="UserTest.testGetUserEntity(java.lang.String, java.lang.String)[pri:0, instance:Test.UserTest@750d3126]" name="testGetUserEntity" class="Test.UserTest"/>
        <method signature="UserTest.testSaveUser(java.lang.Boolean, com.FCI.SWE.Models.UserEntity)[pri:0, instance:Test.UserTest@750d3126]" name="testSaveUser" class="Test.UserTest"/>
        <method signature="ReqTest.testGetReq()[pri:0, instance:Test.ReqTest@8d6a3d1]" name="testGetReq" class="Test.ReqTest"/>
        <method signature="ReqTest.testReq(java.lang.Boolean, com.FCI.SWE.Models.ReqForm)[pri:0, instance:Test.ReqTest@8d6a3d1]" name="testReq" class="Test.ReqTest"/>
      </group> <!-- Entity -->
    </groups>
    <test name="Test1" duration-ms="725" started-at="2015-05-11T17:29:57Z" finished-at="2015-05-11T17:29:58Z">
      <class name="Test.PostTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Test.PostTest@12b7530]" name="setUp" is-config="true" duration-ms="1" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testSavePost(java.lang.Boolean, com.FCI.SWE.Models.Post)[pri:0, instance:Test.PostTest@12b7530]" name="testSavePost" duration-ms="7" started-at="2015-05-11T19:29:57Z" data-provider="testSavePost1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.Post@17d260f6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavePost -->
        <test-method status="PASS" signature="testSavePost(java.lang.Boolean, com.FCI.SWE.Models.Post)[pri:0, instance:Test.PostTest@12b7530]" name="testSavePost" duration-ms="2" started-at="2015-05-11T19:29:57Z" data-provider="testSavePost1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.Post@38fb9e44]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavePost -->
        <test-method status="PASS" signature="testgetStat()[pri:0, instance:Test.PostTest@12b7530]" name="testgetStat" duration-ms="0" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetStat -->
        <test-method status="FAIL" signature="testgetPost2()[pri:0, instance:Test.PostTest@12b7530]" name="testgetPost2" duration-ms="1" started-at="2015-05-11T19:29:57Z" depends-on-methods="Test.PostTest.testSavePost" finished-at="2015-05-11T19:29:57Z">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[No API environment is registered for this thread.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: No API environment is registered for this thread.
	at com.google.appengine.api.datastore.DatastoreApiHelper.getCurrentAppId(DatastoreApiHelper.java:117)
	at com.google.appengine.api.datastore.DatastoreApiHelper.getCurrentAppIdNamespace(DatastoreApiHelper.java:133)
	at com.google.appengine.api.datastore.Query.<init>(Query.java:211)
	at com.google.appengine.api.datastore.Query.<init>(Query.java:142)
	at com.FCI.SWE.Models.Post.savePost(Post.java:123)
	at Test.PostTest.testgetPost2(PostTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetPost2 -->
        <test-method status="FAIL" signature="tearDown()[pri:0, instance:Test.PostTest@12b7530]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at com.google.appengine.tools.development.testing.LocalServiceTestHelper.getLocalService(LocalServiceTestHelper.java:589)
	at com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig.getLocalDatastoreService(LocalDatastoreServiceTestConfig.java:294)
	at com.google.appengine.tools.development.testing.LocalDatastoreServiceTestConfig.tearDown(LocalDatastoreServiceTestConfig.java:288)
	at com.google.appengine.tools.development.testing.LocalServiceTestHelper.tearDownService(LocalServiceTestHelper.java:548)
	at com.google.appengine.tools.development.testing.LocalServiceTestHelper.tearDown(LocalServiceTestHelper.java:520)
	at Test.PostTest.tearDown(PostTest.java:27)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:552)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:140)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:220)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test.PostTest -->
      <class name="Test.ReqTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Test.ReqTest@8d6a3d1]" name="setUp" is-config="true" duration-ms="1" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testGetReq()[pri:0, instance:Test.ReqTest@8d6a3d1]" name="testGetReq" duration-ms="9" depends-on-groups="testUser" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at Test.ReqTest.testGetReq(ReqTest.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:696)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetReq -->
        <test-method status="PASS" signature="testReq(java.lang.Boolean, com.FCI.SWE.Models.ReqForm)[pri:0, instance:Test.ReqTest@8d6a3d1]" name="testReq" duration-ms="4" depends-on-groups="testUser" started-at="2015-05-11T19:29:58Z" data-provider="testSaveReq1" finished-at="2015-05-11T19:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.ReqForm@215e8db2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReq -->
        <test-method status="PASS" signature="testReq(java.lang.Boolean, com.FCI.SWE.Models.ReqForm)[pri:0, instance:Test.ReqTest@8d6a3d1]" name="testReq" duration-ms="3" depends-on-groups="testUser" started-at="2015-05-11T19:29:58Z" data-provider="testSaveReq1" finished-at="2015-05-11T19:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.ReqForm@5527e87d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReq -->
        <test-method status="PASS" signature="testReq(java.lang.Boolean, com.FCI.SWE.Models.ReqForm)[pri:0, instance:Test.ReqTest@8d6a3d1]" name="testReq" duration-ms="4" depends-on-groups="testUser" started-at="2015-05-11T19:29:58Z" data-provider="testSaveReq1" finished-at="2015-05-11T19:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.ReqForm@174f19bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReq -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Test.ReqTest@8d6a3d1]" name="tearDown" is-config="true" duration-ms="1" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test.ReqTest -->
      <class name="Test.UserTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Test.UserTest@750d3126]" name="setUp" is-config="true" duration-ms="1" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="f()[pri:0, instance:Test.UserTest@750d3126]" name="f" duration-ms="1" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="testGetUserEntity(java.lang.String, java.lang.String)[pri:0, instance:Test.UserTest@750d3126]" name="testGetUserEntity" duration-ms="1" started-at="2015-05-11T19:29:57Z" data-provider="testGetName1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ahmed]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ahmed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserEntity -->
        <test-method status="PASS" signature="testGetUserEntity(java.lang.String, java.lang.String)[pri:0, instance:Test.UserTest@750d3126]" name="testGetUserEntity" duration-ms="1" started-at="2015-05-11T19:29:57Z" data-provider="testGetName1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ali]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ali]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserEntity -->
        <test-method status="PASS" signature="testGetUserEntity(java.lang.String, java.lang.String)[pri:0, instance:Test.UserTest@750d3126]" name="testGetUserEntity" duration-ms="1" started-at="2015-05-11T19:29:57Z" data-provider="testGetName1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetUserEntity -->
        <test-method status="PASS" signature="testSaveUser(java.lang.Boolean, com.FCI.SWE.Models.UserEntity)[pri:0, instance:Test.UserTest@750d3126]" name="testSaveUser" duration-ms="7" started-at="2015-05-11T19:29:57Z" data-provider="testSaveUser1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.UserEntity@342d1ead]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveUser -->
        <test-method status="PASS" signature="testSaveUser(java.lang.Boolean, com.FCI.SWE.Models.UserEntity)[pri:0, instance:Test.UserTest@750d3126]" name="testSaveUser" duration-ms="2" started-at="2015-05-11T19:29:57Z" data-provider="testSaveUser1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.UserEntity@24420c5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveUser -->
        <test-method status="PASS" signature="testSaveUser(java.lang.Boolean, com.FCI.SWE.Models.UserEntity)[pri:0, instance:Test.UserTest@750d3126]" name="testSaveUser" duration-ms="3" started-at="2015-05-11T19:29:57Z" data-provider="testSaveUser1" finished-at="2015-05-11T19:29:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[com.FCI.SWE.Models.UserEntity@52532d15]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSaveUser -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Test.UserTest@750d3126]" name="tearDown" is-config="true" duration-ms="1" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test.UserTest -->
      <class name="Test.NewTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Test.NewTest@439cf2df]" name="setUp" is-config="true" duration-ms="50" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="f2()[pri:0, instance:Test.NewTest@439cf2df]" name="f2" duration-ms="559" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="testSingleMessage()[pri:0, instance:Test.NewTest@439cf2df]" name="testSingleMessage" duration-ms="5" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSingleMessage -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Test.NewTest@439cf2df]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-11T19:29:57Z" finished-at="2015-05-11T19:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test.NewTest -->
      <class name="Test.TestService">
        <test-method status="PASS" signature="setUp()[pri:0, instance:Test.TestService@6e7d8dfb]" name="setUp" is-config="true" duration-ms="10" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="testLogin(java.lang.String, java.lang.String)[pri:0, instance:Test.TestService@6e7d8dfb]" name="testLogin" duration-ms="0" depends-on-groups="Entity" started-at="2015-05-11T19:29:58Z" data-provider="testLogin" finished-at="2015-05-11T19:29:58Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestService.testLogin(java.lang.String, java.lang.String)[pri:0, instance:Test.TestService@6e7d8dfb] depends on not successfully finished methods in group "Entity"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestService.testLogin(java.lang.String, java.lang.String)[pri:0, instance:Test.TestService@6e7d8dfb] depends on not successfully finished methods in group "Entity"
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1099)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogin -->
        <test-method status="SKIP" signature="testPost()[pri:0, instance:Test.TestService@6e7d8dfb]" name="testPost" duration-ms="0" depends-on-groups="Entity" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestService.testPost()[pri:0, instance:Test.TestService@6e7d8dfb] depends on not successfully finished methods in group "Entity"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestService.testPost()[pri:0, instance:Test.TestService@6e7d8dfb] depends on not successfully finished methods in group "Entity"
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1099)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPost -->
        <test-method status="SKIP" signature="testRegistration(java.lang.String, java.lang.String)[pri:0, instance:Test.TestService@6e7d8dfb]" name="testRegistration" duration-ms="0" depends-on-groups="Entity" started-at="2015-05-11T19:29:58Z" data-provider="testReg" finished-at="2015-05-11T19:29:58Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestService.testRegistration(java.lang.String, java.lang.String)[pri:0, instance:Test.TestService@6e7d8dfb] depends on not successfully finished methods in group "Entity"]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestService.testRegistration(java.lang.String, java.lang.String)[pri:0, instance:Test.TestService@6e7d8dfb] depends on not successfully finished methods in group "Entity"
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1099)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRegistration -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Test.TestService@6e7d8dfb]" name="tearDown" is-config="true" duration-ms="0" started-at="2015-05-11T19:29:58Z" finished-at="2015-05-11T19:29:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test.TestService -->
    </test> <!-- Test1 -->
  </suite> <!-- TestDependency -->
</testng-results>
